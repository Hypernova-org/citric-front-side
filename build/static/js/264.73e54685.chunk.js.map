{"version":3,"file":"static/js/264.73e54685.chunk.js","mappings":"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","sources":["pages/catalog/index.tsx"],"sourcesContent":["import { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Autoplay } from 'swiper/modules';\r\nimport { CatalogCard, CategoryBtns } from 'components';\r\nimport { useGet, useHooks } from 'hooks'\r\n\r\nimport '../../components/categoryBtns/style.scss'\r\nimport 'swiper/css';\r\nimport 'swiper/css/free-mode';\r\nimport 'swiper/css/pagination';\r\nimport './style.scss'\r\nimport { uniqueId } from 'lodash';\r\nimport { useState } from 'react';\r\n\r\nconst Catalog = () => {\r\n  const { t, get } = useHooks()\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState({\r\n    categoryName: \"Hammasi\",\r\n    _v: 999,\r\n    _id: \"1\"\r\n  },)\r\n\r\n  const { isLoading: productsLoading, data: productsData } = useGet({\r\n    name: \"products\",\r\n    url: \"products\",\r\n    params: {\r\n      extra: {\r\n        category: get(selectedCategory, \"_id\") == \"1\" ? \"\" : get(selectedCategory, \"_id\")\r\n      }\r\n    },\r\n    onSuccess: (data) => {\r\n    },\r\n    onError: (error) => {\r\n    },\r\n  });\r\n\r\n  const { isLoading: categoriesLoading, data: categoriesData } = useGet({\r\n    name: \"categories\",\r\n    url: \"categories\",\r\n    onSuccess: (data) => {\r\n    },\r\n    onError: (error) => {\r\n    },\r\n  });\r\n\r\n  const products = get(productsData, \"data\", [])\r\n  const categories = [\r\n    {\r\n      categoryName: \"Hammasi\",\r\n      _v: 999,\r\n      _id: \"1\"\r\n    }, ...get(categoriesData, \"data\", [])]\r\n  return (\r\n    <div className='catalog-page'>\r\n      <div className=\"catalog-hero\">\r\n        <h2 className=\"catalog-hero__title\">{t(\"Katalog\")}</h2>\r\n        <div className=\"catalog-hero__cards\">\r\n          <Swiper\r\n            slidesPerView={1}\r\n            initialSlide={2}\r\n            spaceBetween={10}\r\n            loop\r\n            autoplay={{\r\n              delay: 1600\r\n            }}\r\n            speed={1200}\r\n            breakpoints={{\r\n              '1500': {\r\n                slidesPerView: 5,\r\n                spaceBetween: 20,\r\n              },\r\n              '1400': {\r\n                slidesPerView: 4,\r\n                spaceBetween: 10,\r\n              },\r\n              '1200': {\r\n                slidesPerView: 4,\r\n                spaceBetween: 10,\r\n              },\r\n              '992': {\r\n                slidesPerView: 3,\r\n                spaceBetween: 10,\r\n              },\r\n              '770': {\r\n                slidesPerView: 2,\r\n                spaceBetween: 30,\r\n              },\r\n              '700': {\r\n                slidesPerView: 2,\r\n                spaceBetween: 10,\r\n                centeredSlides: true\r\n              },\r\n            }}\r\n            modules={[Autoplay]}\r\n            freeMode={true}\r\n            className=\"mySwiper desktop-carousel\"\r\n          >\r\n            {get(categoriesData, \"data\", []).map((category) => (\r\n              <SwiperSlide key={get(category, \"_id\")}>\r\n                <div className='catalog-category__card' key={get(category, \"id\")}>\r\n                  <img src={get(category, \"images[0].large\")} alt={get(category, \"name\")} className=\"catalog-category__img\" />\r\n                  <p className={'category-category__title'} key={get(category, \"id\")}>\r\n                    {get(category, \"categoryName\")}\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n\r\n          <Swiper\r\n            slidesPerView={1}\r\n            initialSlide={1}\r\n            loop\r\n            autoplay={{\r\n              delay: 1600\r\n            }}\r\n            centeredSlides\r\n            speed={1200}\r\n            className=\"mySwiper mobile-carousel\"\r\n          >\r\n            {get(categoriesData, \"data\", []).map((category) => (\r\n              <SwiperSlide key={get(category, \"_id\")}>\r\n                <div className='catalog-category__card' key={get(category, \"id\")}>\r\n                  <img src={get(category, \"img\")} alt={get(category, \"name\")} className=\"catalog-category__img\" />\r\n                  <p className={'category-category__title'} key={get(category, \"id\")}>\r\n                    {get(category, \"title\")}\r\n                  </p>\r\n                </div>\r\n              </SwiperSlide>\r\n            ))}\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n      <div className=\"container catalog-products\">\r\n        {/* <h3 className=\"catalog-products__title\">{t(\"Barchasi\")}</h3> */}\r\n        <div className='catalog-categories'>\r\n          {categories.map((category: any) => (\r\n            <button\r\n              className={get(selectedCategory, \"_id\") == get(category, \"_id\") ? 'selectedCategory category-btn' : 'category-btn'}\r\n              onClick={() => setSelectedCategory(category)}\r\n              key={get(category, \"id\")}>\r\n              {get(category, \"_v\") == 999 ? t(get(category, \"categoryName\")) : get(category, \"categoryName\")}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"catalog-list\">\r\n          {\r\n            products.map((item) => (\r\n              <CatalogCard key={uniqueId} {...{ item }} />\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className='flex justify-center items-center'>\r\n        <button className='view-more'>{t(\"Yana koâ€™rish\")}</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Catalog"],"names":["Catalog","t","get","useHooks","selectedCategory","setSelectedCategory","useState","categoryName","_v","_id","isLoading","productsLoading","data","productsData","useGet","name","url","params","extra","category","onSuccess","onError","error","categoriesLoading","categoriesData","products","categories","_jsxs","className","children","_jsx","Swiper","slidesPerView","initialSlide","spaceBetween","loop","autoplay","delay","speed","breakpoints","centeredSlides","modules","Autoplay","freeMode","map","SwiperSlide","src","alt","onClick","item","CatalogCard","uniqueId"],"sourceRoot":""}